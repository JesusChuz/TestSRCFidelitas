@model sistema_reconocimiento.Models.SubmitPurchaseViewModel
@{

    ViewData["Title"] = "Principal";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int points = ViewBag.GetPoints;
    int ID_Engineer = ViewBag.GetIdEngineer;
    var activePhrases = Model.Phrases;
}
<style>
    .card-content {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem; /* Adjust the gap as needed */
    }

    .media {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1rem; /* Adjust the gap as needed */
        margin-bottom: 1rem; /* Adjust margin as needed */
    }

    .avatar {
        width: 64px; /* Adjust the avatar width as needed */
        height: 64px; /* Adjust the avatar height as needed */
    }

    .media-body {
        flex: 1;
    }
</style>
<!-------------rest of the page ------------->
<div class="app-content content">
    <div class="content-wrapper">
        <div class="content-wrapper-before"></div>
        <div class="content-header row"></div>
        <div class="content-body">
            <div class="row match-height">
                <div class="col-12">
                    <div class="navbar-nav align-items-center">
                        <h3 class="content-header-right" id="rotating-phrase"></h3>
                        </br>
                    </div>
                    </br>
                    </br>
                    </br>
                </div>
            </div>
        </div>
    </div>
    <!--/ eCommerce statistic -->
    <!-- Statistics -->
    <div class="row match-height">
        <div class="col-xl-4 col-lg-12">
        </div>
        <div class="col-xl-4 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Top 5 engineers with most recognitions</h4>
                    <a class="heading-elements-toggle">
                        <i class="fa fa-ellipsis-v font-medium-3"></i>
                    </a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li>
                                <a data-action="reload">
                                    <i class="ft-rotate-cw"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                @foreach (var listTop in Model.Top5)
                {
                    <div class="card-content d-flex flex-wrap">
                        <div id="recent-buyers" class="media-list">
                            <div>
                                <a href="#" class="media border-0">
                                    <div class="media-left pr-1">
                                        <span class="avatar avatar-md avatar-online">
                                            @if (!string.IsNullOrEmpty(@listTop.Base64Image))
                                            {
                                                <img class="d-block rounded" alt="user-avatar" src="data:image;base64,@listTop.Base64Image"/>
                                            }
                                            else
                                            {
                                                <img class="d-block rounded" alt="user-avatar" src="~/assets/img/avatars/default.png" />
                                            }
                                            <i></i>
                                        </span>
                                    </div>
                                    <div class="media-body w-100">
                                        <span class="list-group-item-heading">
                                            @listTop.FullName (@listTop.Email)
                                        </span>
                                        <p class="list-group-item-text mb-0">
                                            <span class="blue-grey lighten-2 font-small-3"> @listTop.PositionName</span>
                                        </p>
                                    </div>
                                    <i class="fas fa-star">@listTop.Count</i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-xl-4 col-lg-12">
        </div>

        <!--/ Statistics -->
        <!-- Images -->
        <div class="card-header">
            <div class="navbar-nav align-items-center">
                <h3 class="content-header-right">Rewards</h3>
                </br>
                @if (TempData["msgPurchaseSucceeded"] != null)
                {
                    <div class="msg">
                        <span class="text-danger">@TempData["msgPurchaseSucceeded"]</span>
                    </div>
                }
            </div>
            <div class="row mb-5">
                @foreach (var item in Model.Rewards)
                {
                    <div class="col-md-6 col-xl-4">
                        <div class="card mb-3">
                            <img class="card-img-top responsive-img" src="@Url.Action("ShowPicture", "Main", new { id = item.ID_Reward })"/>
                            <div class="card-body">
                                <h5 class="card-title">
                                    @Html.DisplayFor(modelItem => item.Reward_Name)
                                </h5>
                                <p class="card-text">
                                    @Html.DisplayFor(modelItem => item.Reward_Description)
                                </p>
                                <label>
                                    Price:
                                </label>
                                <br />
                                <div class="navbar-nav align-items-center">
                                    <svg width="80" height="80">
                                        <circle cx="40" cy="40" r="30" fill="#79d4f7" />
                                        <text x="50%" y="55%" text-anchor="middle" fill="white" font-size="12px">@Html.DisplayFor(modelItem => item.Price) pts</text>
                                    </svg>
                                </div>
                                <!-- <div class="navbar-nav align-items-center">
                                    <a class="btn btn-danger" href="">Canjear puntos</a>
                                </div> -->
                                @using (Html.BeginForm("Canjear_Recompensa", "Main", FormMethod.Post, new { @class = "submit-purchase", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="mb-3">
                                        <input asp-for="Purchases.Engineer_ID" class="form-control hidden disabled" value="@ID_Engineer" />
                                        <input asp-for="Purchases.Reward_ID" class="form-control txtID_Reward hidden disabled" value="@item.ID_Reward" />
                                        <input asp-for="Purchases.Reward_Price" class="form-control txtPrice hidden disabled" value="@item.Price" />
                                        <input asp-for="Purchases.Points" class="form-control txtPoints hidden disabled" value="@points" />
                                    </div>
                                    <div class="navbar-nav align-items-center">
                                        <button type="submit" class="btn btn-danger"> Buy </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <!--/ Images -->
    </div>
</div>
<!-------------rest of the page ------------->
<script src="~/theme-assets/vendors/libs/jquery/jquery.js"></script>
<script>
    var ReconoS = '@TempData["ReconoSuccess"]';
    if (ReconoS === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["success"]("Recognition sent");
    }
</script>
<script>
    var RenCreado = '@TempData["RewardBuy"]';
    if (RenCreado === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["success"]("Reward Buyed!");
    }
</script>
<script>
    $(document).ready(function () {
        $('.submit-purchase').click(function (e) {
            e.preventDefault(); // Evita que el formulario se envíe automáticamente

            var form = $(this).closest('form');
            let points = parseInt(form.find('.txtPoints').val());
            let price = parseInt(form.find('.txtPrice').val());

            if (!isNaN(points) && !isNaN(price) && points >= price) {
                Swal.fire({
                    title: 'Are you sure that you want to buy this reward?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#79d4f7',
                    cancelButtonColor: 'red',
                    confirmButtonText: 'Yes, get this reward',
                    cancelButtonText: 'No, cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit(); // Envía el formulario más cercano al botón clickeado
                    }
                });
            } else {
                Swal.fire({
                    title: 'Insufficient funds',
                    text: 'You do not have enough money to purchase this reward.',
                    icon: 'info',
                    confirmButtonColor: '#79d4f7',
                    confirmButtonText: 'OK'
                });
            }
        });
    });
</script>
<script>
    var phrases = @Html.Raw(Json.Serialize(Model.Phrases));

    function rotatePhrases() {
        var index = Math.floor(Math.random() * phrases.length);
        var phrase = phrases[index];
        $('#rotating-phrase').text(phrase);

        setInterval(function () {
            index = Math.floor(Math.random() * phrases.length);
            phrase = phrases[index];
            $('#rotating-phrase').text(phrase);
        }, 10000);
    }

    $(document).ready(function () {
        if (phrases.length > 0) {
            rotatePhrases();
        }
    });
</script>




