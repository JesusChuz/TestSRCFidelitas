@model IEnumerable<sistema_reconocimiento.Models.Engineers>

@{
    ViewData["Title"] = "Ingenieros";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int points = ViewBag.GetPoints;
    int ID_Engineer = ViewBag.GetIdEngineer;
}
<div class="app-content content">
    <div class="content-wrapper">
        <div class="content-wrapper-before"></div>
        <div class="content-header row">
            <div class="content-header-left col-md-4 col-12 mb-2">
                <h3 class="content-header-title">Engineers</h3>
            </div>
        </div>
        <div class="content-body">
            <!-- Basic Tables start -->
            <!-- Table head options start -->
            <div class="row">
                <div class="col-12">
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li>
                                <!-- Buscar -->
                                <div class="navbar-nav align-items-center">
                                    <div class="nav-item d-flex align-items-center">
                                        <i class="bx bx-search fs-4 lh-0"></i>
                                        <input type="text"
                                               class="form-control border-0 shadow-none"
                                               placeholder="Search"
                                               aria-label="Search"
                                               id="searchInput" />
                                    </div>
                                </div>
                                <!-- /Search -->
                            </li>
                        </ul>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            <a asp-controller="Main" asp-action="Agregar_ingeniero" class="btn btn-danger"><i class="fas fa-plus"></i>Add Engineer</a>
                            <div class="heading-elements">
                                <ul class="list-inline mb-0">
                                    <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                                    <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                                    <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                                </ul>
                            </div>
                        </div>
                        <div class="card-content collapse show">
                            <div class="card-body">
                            </div>
                            <div class="table-responsive">
                                <table class="table" id="myTable">
                                    <thead class="thead-default">
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Email</th>
                                            <th scope="col">Is locked out?</th>
                                            <th scope="col">Is a new account?</th>
                                            <th scope="col">Manager</th>
                                            <th scope="col">User Rol</th>
                                            <th scope="col">Position</th>
                                            <th scope="col">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            int contador = 1; // Variable para el contador
                                        }
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <th scope="row">@contador</th>
                                                <td>@Html.DisplayFor(modelItem => item.Name_Engineer)</td>
                                                <td>
                                                    <div data-toggle="tooltip"
                                                         data-placement="top"
                                                         title="Lock/Unlock account" style="display: flex;">
                                                         @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                                                    </div>
                                                </td>
                                                <td>
                                                    <div data-toggle="tooltip"
                                                         data-placement="top"
                                                         title="Lock/Unlock account" style="display: flex;">
                                                        @Html.DisplayFor(modelItem => item.ApplicationUser.LockoutEnabled) <a class="enlace-visitado" asp-controller="Main" asp-action="Change_lock" asp-route-id="@item.ID_Engineer"><i class="fas fa-lock"></i></a>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div data-toggle="tooltip"
                                                         data-placement="top"
                                                         title="Lock/Unlock account" style="display: flex;">
                                                        @Html.DisplayFor(modelItem => item.ApplicationUser.IsNew)
                                                    </div>
                                                </td>
                                                <td>@Html.DisplayFor(modelItem => item.Manager.Name_Manager)  @Html.DisplayFor(modelItem => item.Manager.LastName_Manager)</td>
                                                <td>@Html.DisplayFor(modelItem => item.ApplicationUser.Roles)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Positions.Position_Name)</td>
                                                <td>
                                                    <div style="display: flex;">
                                                        <div data-toggle="tooltip"
                                                             data-placement="top"
                                                             title="Edit engineer">
                                                            <a class="btn btn-danger enter-edit" asp-controller="Main" asp-action="Editar_ingeniero" asp-route-id="@item.ID_Engineer"><i class="fas fa-pen"></i></a>
                                                        </div>
                                                        <div data-toggle="tooltip"
                                                             data-placement="top"
                                                             title="Delete engineer">
                                                            <a class="btn btn-danger submit-delete" asp-controller="Main" asp-action="Eliminar_Ingeniero" asp-route-id="@item.ID_Engineer"><i class="fas fa-trash"></i></a>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                            contador++;
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div id="paginationAR" class="pagination-container navbar-nav align-items-center">
                            <ul class="pagination">
                                <li class="page-item prev-page"><a class="btn btn-danger" href="#">Previous</a></li>
                                <li class="page-item">
                                    @*<span class="page-link">*@
                                    <svg width="40" height="40">
                                        <circle cx="20" cy="20" r="15" fill="#79d4f7" />
                                        <text class="current-page" x="50%" y="55%" text-anchor="middle" fill="white" font-size="12px">1</text>
                                    </svg>
                                    @*</span>*@
                                </li>
                                <li class="page-item next-page"><a class="btn btn-danger" href="#">Next</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/theme-assets/vendors/libs/jquery/jquery.js"></script>
<script>
    $(document).ready(function () {
        $('a.submit-delete').click(function (e) {
            e.preventDefault(); // Evita que el enlace se siga al hacer clic

            Swal.fire({
                title: 'Are you sure that you want to delete this reward?',
                text: 'This action cannot be reverted',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: 'red',
                cancelButtonColor: '#79d4f7',
                confirmButtonText: 'Yes, delete it',
                cancelButtonText: 'No, cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = $(this).attr('href');
                }
            });
        });

        $('a.enter-edit').click(function (e) {
            e.preventDefault(); // Evita que el enlace se siga al hacer clic

            Swal.fire({
                title: 'Are you sure that you want to edit this reward?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: 'red',
                cancelButtonColor: '#79d4f7',
                confirmButtonText: 'Yes, I am gonna edit it',
                cancelButtonText: 'No, cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = $(this).attr('href');
                }
            });
        });
    });
</script>
<script>
    var RenCreado = '@TempData["IngCreado"]';
    if (RenCreado === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["success"]("Engineer created");
    }
    var RenEliminada = '@TempData["IngEliminado"]';
    if (RenEliminada === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["error"]("Engineer deleted");
    }
    var DisableAccountafterDelete = '@TempData["msgEngineerConstraint"]';
    if (DisableAccountafterDelete === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["error"]("There is Information associated to this engineer so we cannot delete it, however we have disabled the account.");
    }
    var DisableAccountafterDelete = '@TempData["msgUnableDeleteLeaseManager"]';
    if (DisableAccountafterDelete === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["error"]("Since there are records like engineers and recognitions leased to this manager, we cannot delete it and automatically point them to another manager.");
    }
    var DisableAccount = '@TempData["msgAccountDisabled"]';
    if (DisableAccount === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["info"]("The account has been locked");
    }
    var EnableAccount = '@TempData["msgAccountEnabled"]';
    if (EnableAccount === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr["info"]("The account has been unlocked");
    }
    var RenM = '@TempData["IngModif"]';
    if (RenM === "True") {
        // Mostrar notificación de éxito
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr["info"]("Engineer data modified");
    }
</script>
<script>
    // Función para filtrar las tablas por la búsqueda
    function filterTable(tableId, searchInputId) {
        let input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById(searchInputId);
        filter = input.value.toUpperCase();
        table = document.getElementById(tableId);
        tr = table.getElementsByTagName("tr");

        // Iterar sobre las filas de la tabla y mostrar/ocultar según el filtro de búsqueda
        for (i = 0; i < tr.length; i++) {
            if (i === 0) {
                // Saltar la primera fila (títulos de las columnas)
                continue;
            }
            let found = false;
            td = tr[i].getElementsByTagName("td");

            for (j = 0; j < td.length; j++) {
                txtValue = td[j].textContent || td[j].innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    found = true;
                    break;
                }
            }

            if (found) {
                tr[i].style.display = "";
            } else {
                tr[i].style.display = "none";
            }
        }
    }

    // Evento para ejecutar la búsqueda al escribir en la barra de búsqueda
    document.getElementById("searchInput").addEventListener("keyup", function () {
        filterTable("myTable", "searchInput"); // Modificar los valores según el ID de tus tablas y la barra de búsqueda
    });
</script>
<script>
    // Función para mostrar los elementos correspondientes a la página actual
    function showPage(page, tableId, paginationContainerId) {
        var rowsPerPage = 10; // Número de filas por página
        var startIndex = (page - 1) * rowsPerPage;
        var endIndex = startIndex + rowsPerPage;

        // Ocultar todas las filas de la tabla
        $('#' + tableId + ' tbody tr').hide();

        // Mostrar las filas de la página actual
        $('#' + tableId + ' tbody tr').slice(startIndex, endIndex).show();

        // Actualizar el número de página actual en el elemento correspondiente
        $('#' + paginationContainerId + ' .current-page').text(page);
    }

    $(document).ready(function () {
        var currentPageP = 1; // Página actual inicial para la tabla reconocimientos pendings
        var currentPageAR = 1; // Página actual inicial para la tabla Historial de reconocimientos

        // Mostrar la página actual al cargar la página
        showPage(currentPageAR, 'myTable', 'paginationAR');

        // Evento de clic para el botón "Anterior" de la tabla Historial de reconocimientos
        $('#paginationAR .prev-page').click(function () {
            if (currentPageAR > 1) {
                currentPageAR--;
                showPage(currentPageAR, 'myTable', 'paginationAR');
            }
        });

        // Evento de clic para el botón "Siguiente" de la tabla Historial de reconocimientos
        $('#paginationAR .next-page').click(function () {
            var totalPagesAR = Math.ceil($('#myTable tbody tr').length / 10); // Calcular el número total de páginas
            if (currentPageAR < totalPagesAR) {
                currentPageAR++;
                showPage(currentPageAR, 'myTable', 'paginationAR');
            }
        });
    });
</script>
