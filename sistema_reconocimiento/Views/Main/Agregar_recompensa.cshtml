@model sistema_reconocimiento.Models.Rewards

@{
    ViewData["Title"] = "Agregar Recompensa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="app-content content">
    <div class="card-body">
        <div class="col-md-6" style="float:none;margin:auto;">
            <div class="card mb-2">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Add Reward</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Agregar_recompensa", "Main", FormMethod.Post, new { enctype = "multipart/form-data"}))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-name">Title</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-name" class="input-group-text">
                                    <i class="fas fa-pen"></i>
                                </span>
                                @Html.TextBoxFor(m => m.Reward_Name, new { @class = "form-control", value="@Model.Reward_Name"})
                            </div>
                            <span class="text-danger">@TempData["msgReward_Name"]</span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-lastname">Description</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-lastname" class="input-group-text">
                                    <i class="fas fa-book"></i>
                                </span>
                                @Html.TextBoxFor(m => m.Reward_Description, new { @class = "form-control", value="@Model.Reward_Description"})
                            </div>
                            <span class="text-danger">@TempData["msgReward_Description"]</span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-email">Price</label>
                            <div class="input-group input-group-merge">
                                <span class="input-group-text"><i class="fas fa-money"></i></span>
                                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", value="@Model.Price", type="number"})
                            </div>
                            <span class="text-danger">@TempData["msgPrice"]</span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-email">Image</label>
                            <div class="input-group input-group-merge">
                                <span class="input-group-text"><i class="fas fa-photo"></i></span>
                                @Html.TextBoxFor(m => m.PictureFile, new { @class = "form-control", type = "file", name = "PictureFile", accept = ".jpg, .jpeg, .png"})
                            </div>
                            <span class="text-danger">@TempData["msgPictureFile"]</span>
                        </div>
                        <button id="saveRewards" type="submit" class="btn btn-primary">Create Reward</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/theme-assets/vendors/libs/jquery/jquery.js"></script>
<script>
    $(document).ready(function () {
        $("input[name='PictureFile']").change(function () {
            validateImageFile(this);
        });
    });

    function validateImageFile(input) {
        const allowedExtensions = ['jpg', 'jpeg', 'png'];
        const fileExtension = input.value.split('.').pop().toLowerCase();

        if (!allowedExtensions.includes(fileExtension)) {
            // Mostrar SweetAlert con el mensaje de error
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'The only allowed formats are .jpg, .jpeg o .png.',
                confirmButtonColor: '#79d4f7',
                confirmButtonText: 'OK'
            });

            // Limpiar el campo para evitar la selección incorrecta
            $(input).val('');
        }
    }
</script>